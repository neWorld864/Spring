<?xml version="1.0" encoding="UTF-8"?>
<web-app version="2.5" xmlns="http://java.sun.com/xml/ns/javaee"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee https://java.sun.com/xml/ns/javaee/web-app_2_5.xsd">

	<!-- The definition of the Root Spring Container shared by all Servlets and Filters -->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>
			classpath:root-context.xml
			/WEB-INF/spring/spring-security.xml
		</param-value><!-- 큰 resources는 classpath: 로 쓴다 -->
	</context-param>
	
	<!-- Creates the Spring Container shared by all Servlets and Filters -->
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>

	<!-- Processes application requests -->
	<servlet>
		<servlet-name>appServlet</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>/WEB-INF/spring/appServlet/servlet-context.xml</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>
	<!-- DispatcherServlet을 사용하기 위해서는  servlet-context.xml을 참조하고 있어야 함 -->
	<!-- DispatcherServlet는 HandlerMapping랑 같이 cotroller객체를 찾음 -->
		
	<servlet-mapping>
		<servlet-name>appServlet</servlet-name>
		<url-pattern>*.do</url-pattern>
	</servlet-mapping>
	
	<!-- 회원 관련 -->
	<servlet>
		<servlet-name>memberServlet</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>/WEB-INF/spring/appServlet/member-context.xml</param-value>
		</init-param>
	</servlet>
	<servlet-mapping>
		<servlet-name>memberServlet</servlet-name>
		<url-pattern>*.me</url-pattern>
	</servlet-mapping>
	
<!-- /(슬래시)는 나는 모든 url을 다 처리할게~ 라는 의미임 -->
<!-- 여기에는 welcome-file-list가 없음 => Servers/SpringServer-config/web.xml 맨 아래에 있는 welcome-file-list를 따름 -->
<!-- 이거 말고 기존에는 서버나 여기나 다  welcome-file-list가 있어서 서버에 있는걸로? 서버에 있는게? 덮어 씌워졌었음. -->
<!-- spring에서는 .bo .no .th .do .me 이게 다 의미가 있음 -->

	<!-- 공용 에러페이지 등록 -->
	<error-page>
		<exception-type>java.lang.Exception</exception-type>
		<location>/WEB-INF/views/common/errorPage.jsp</location>
	</error-page>
	
	<!-- 인코딩 필터 등록 -->
	<filter>
		<filter-name>encodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>encodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	
	<!-- 게시판 관련 -->
	<servlet>
		<servlet-name>boardServlet</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
			<!-- init-param : 어디에 viewResolver가 있는지 --><!-- viewResolver : 누구한테 view를 넘겨줄지 결정해주는 역할 -->
			<param-name>contextConfigLocation</param-name>
			<param-value>
				/WEB-INF/spring/appServlet/board-context.xml
				/WEB-INF/spring/appServlet/aspect-context.xml
			</param-value>
		</init-param>
	</servlet>
	<servlet-mapping>
		<servlet-name>boardServlet</servlet-name>
		<url-pattern>*.bo</url-pattern>
	</servlet-mapping>
</web-app>
